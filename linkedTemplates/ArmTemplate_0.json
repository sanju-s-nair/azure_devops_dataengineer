{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demo-olympics-factory1"
		},
		"datalakeLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'datalakeLS'"
		},
		"datalakeLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sanjusolympicsdl.dfs.core.windows.net/"
		},
		"gitlinkservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/datalakeLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalakeLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('datalakeLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gitlinkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('gitlinkservice_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw_data",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_long",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "note",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "param.json",
						"fileSystem": "bronze"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"p_rel_url": {
							"type": "string"
						},
						"p_folder": {
							"type": "string"
						},
						"p_file": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParaDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_long",
						"type": "String"
					},
					{
						"name": "tag",
						"type": "String"
					},
					{
						"name": "note",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronzedatalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/para_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalakeLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nocs.csv",
						"folderPath": "raw_data",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "current",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "name_short",
						"type": "String"
					},
					{
						"name": "name_tv",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "function",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_long",
						"type": "String"
					},
					{
						"name": "nationality",
						"type": "String"
					},
					{
						"name": "nationality_long",
						"type": "String"
					},
					{
						"name": "nationality_code",
						"type": "String"
					},
					{
						"name": "height",
						"type": "String"
					},
					{
						"name": "weight",
						"type": "String"
					},
					{
						"name": "disciplines",
						"type": "String"
					},
					{
						"name": "events",
						"type": "String"
					},
					{
						"name": "birth_date",
						"type": "String"
					},
					{
						"name": "birth_place",
						"type": "String"
					},
					{
						"name": "birth_country",
						"type": "String"
					},
					{
						"name": "residence_place",
						"type": "String"
					},
					{
						"name": "residence_country",
						"type": "String"
					},
					{
						"name": "nickname",
						"type": "String"
					},
					{
						"name": "hobbies",
						"type": "String"
					},
					{
						"name": "occupation",
						"type": "String"
					},
					{
						"name": "education",
						"type": "String"
					},
					{
						"name": "family",
						"type": "String"
					},
					{
						"name": "lang",
						"type": "String"
					},
					{
						"name": "coach",
						"type": "String"
					},
					{
						"name": "reason",
						"type": "String"
					},
					{
						"name": "hero",
						"type": "String"
					},
					{
						"name": "influence",
						"type": "String"
					},
					{
						"name": "philosophy",
						"type": "String"
					},
					{
						"name": "sporting_relatives",
						"type": "String"
					},
					{
						"name": "ritual",
						"type": "String"
					},
					{
						"name": "other_sports",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datalakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawdatafromgit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gitlinkservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_rel_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_rel_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gitlinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLakeDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata Folder').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition file match",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().name,'nocs.csv'),equals(item().type,'File'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Append File names",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "v_file_array",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "para_DS",
														"type": "DatasetReference",
														"parameters": {
															"p_container": "source",
															"p_folder": "raw_data",
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "para_DS",
														"type": "DatasetReference",
														"parameters": {
															"p_container": "bronze",
															"p_folder": "nocs",
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set Files names",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_names",
							"value": {
								"value": "@string(variables('v_file_array'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set File number",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_files_no",
							"value": {
								"value": "@length(variables('v_file_array'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_file_array": {
						"type": "Array"
					},
					"v_files_no": {
						"type": "Integer"
					},
					"v_file_names": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataLakeDS')]",
				"[concat(variables('factoryId'), '/datasets/para_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/git_to_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupJSON",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "JsonDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachCSVFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupJSON",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupJSON').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "git_to_bronze_copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "rawdatafromgit",
											"type": "DatasetReference",
											"parameters": {
												"p_rel_url": {
													"value": "@item().p_rel_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "bronzedatalake",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": {
													"value": "@item().p_folder",
													"type": "Expression"
												},
												"p_file": {
													"value": "@item().p_file",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JsonDataset')]",
				"[concat(variables('factoryId'), '/datasets/rawdatafromgit')]",
				"[concat(variables('factoryId'), '/datasets/bronzedatalake')]"
			]
		}
	]
}